# Generated by Django 5.2.3 on 2025-07-14 04:42

import cloudinary_storage.storage
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_name', models.SlugField(max_length=500, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('cv_url', models.URLField(blank=True, null=True)),
                ('full_name', models.CharField(max_length=100)),
                ('profile_pic', models.ImageField(storage=cloudinary_storage.storage.MediaCloudinaryStorage, upload_to='profile_pictures')),
                ('current_job', models.CharField(max_length=500)),
                ('about', models.TextField(max_length=2000)),
                ('email', models.EmailField(max_length=254)),
                ('age', models.IntegerField()),
                ('analytics', models.CharField(blank=True, max_length=200, null=True)),
                ('adsense', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('fb', models.URLField(blank=True, null=True)),
                ('insta', models.URLField(blank=True, null=True)),
                ('tele', models.URLField(blank=True, null=True)),
                ('wp', models.URLField(blank=True, null=True)),
                ('user', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='Accounts.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=100)),
                ('mastery', models.IntegerField()),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.website')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('about', models.TextField(max_length=2000)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.website')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, max_length=10000, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank='true', null='true', storage=cloudinary_storage.storage.MediaCloudinaryStorage, upload_to='posts')),
                ('dislikes', models.ManyToManyField(blank=True, related_name='dislikes', to='portfolio.website')),
                ('likes', models.ManyToManyField(blank=True, related_name='likes', to='portfolio.website')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_profile', to='portfolio.website')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=1000)),
                ('url', models.CharField(max_length=100)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to='portfolio.website')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='portfolio.website')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.CharField(max_length=100)),
                ('years', models.IntegerField()),
                ('about', models.TextField(max_length=2000)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.website')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=10000)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portfolio.post')),
                ('dislikes', models.ManyToManyField(blank=True, related_name='comment_dislikes', to='portfolio.website')),
                ('likes', models.ManyToManyField(blank=True, related_name='comment_likes', to='portfolio.website')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_profile', to='portfolio.website')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cert', models.ImageField(storage=cloudinary_storage.storage.MediaCloudinaryStorage, upload_to='Certificates')),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.website')),
            ],
        ),
    ]
